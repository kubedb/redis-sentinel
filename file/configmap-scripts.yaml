apiVersion: v1
kind: ConfigMap
metadata:
  name: predis-scripts
  namespace: "default"
  labels:
    app: predis-scripts
data:
  run.sh: |-
    #!/bin/bash
    echo "-----------run.sh variable-------------------$@-----------------------"
    cp /config/redis.conf /data/redis.conf
    down=5000
    timeout=5000
    flag=1
    not_exists_dns_entry() {
       myip=$(hostname -i)
       echo " my ip $myip"
       if [[ -z "$(getent ahosts "$HEADLESS_SERVICE" | grep "^${myip}" )" ]]; then
           echo "$HEADLESS_SERVICE does not contain the IP of this pod: ${myip}"
           flag=1
       else
          echo "$HEADLESS_SERVICE has my IP: ${myip}"
          flag=0
       fi
    }
    HEADLESS_SERVICE="predis-svc.default.svc"
    while [[ flag -ne 0 ]]
    do
      echo "getting ----- "
      echo "flag =  $flag "
      not_exists_dns_entry
    done
    echo "..........$HOSTNAME"

    my_hostname=$(hostname)
    echo "Bootstrapping RedisDB replica set member: $my_hostname"
    echo  "Reading standard input..."

    # Peer finder -----------
    while read -ra line; do
        tmp=$(echo -n ${line[0]} | sed -e "s/.svc.cluster.local//g")
        if [[ "$HOST_ADDRESS_TYPE" == "IPv6" ]]; then
            tmp="[$tmp]"
        fi
        peers=("${peers[@]}" "$tmp")

    done
    echo "Trying to start group with peers'${peers[*]}'"

    for ip in "${peers[@]}"
    do
      echo "ip is ------------ $ip -------- "
    done

    sleep 6
    sentinel_info_command="redis-cli -h sentinel-svc.default.svc -p 26379 SENTINEL get-master-addr-by-name mymaster"
    REDIS_SENTINEL_INFO=($($sentinel_info_command))
    REDIS_MASTER_HOST=${REDIS_SENTINEL_INFO[0]}
    REDIS_MASTER_PORT_NUMBER=${REDIS_SENTINEL_INFO[1]}

    echo "--------maser host --$REDIS_MASTER_HOST-------------"
    echo "--------master port --$REDIS_MASTER_PORT_NUMBER------"
    echo "-----------------------------------------"
    echo " --------len   - ${#REDIS_SENTINEL_INFO[@]} ---- "


    if [[ ${#REDIS_SENTINEL_INFO[@]} == 0 ]]; then
      if [[ $HOSTNAME == "predis-sts-0" ]]; then
        add_master_with_0th_sentinel="redis-cli -h sentinel-sts-0.sentinel-svc.default.svc -p 26379 SENTINEL MONITOR mymaster $(hostname -i) 6379 2"
        add_master_with_1th_sentinel="redis-cli -h sentinel-sts-1.sentinel-svc.default.svc -p 26379 SENTINEL MONITOR mymaster $(hostname -i) 6379 2"
        add_master_with_2th_sentinel="redis-cli -h sentinel-sts-2.sentinel-svc.default.svc -p 26379 SENTINEL MONITOR mymaster $(hostname -i) 6379 2"
        ADD_MASTER_WITH_OTH_SENTINEL=($($add_master_with_0th_sentinel))
        ADD_MASTER_WITH_1TH_SENTINEL=($($add_master_with_1th_sentinel))
        ADD_MASTER_WITH_2TH_SENTINEL=($($add_master_with_2th_sentinel))

        add_failover_with_0th_sentinel="redis-cli -h sentinel-sts-0.sentinel-svc.default.svc -p 26379 sentinel set mymaster failover-timeout $timeout"
        add_failover_with_1th_sentinel="redis-cli -h sentinel-sts-1.sentinel-svc.default.svc -p 26379 sentinel set mymaster failover-timeout $timeout"
        add_failover_with_2th_sentinel="redis-cli -h sentinel-sts-2.sentinel-svc.default.svc -p 26379 sentinel set mymaster failover-timeout $timeout"
        ADD_FAILOVER_WITH_0TH_SENTINEL=($($add_failover_with_0th_sentinel))
        ADD_FAILOVER_WITH_1TH_SENTINEL=($($add_failover_with_1th_sentinel))
        ADD_FAILOVER_WITH_2TH_SENTINEL=($($add_failover_with_2th_sentinel))


        add_down_after_with_0th_sentinel="redis-cli -h sentinel-sts-0.sentinel-svc.default.svc -p 26379 sentinel set mymaster down-after-milliseconds $down"
        add_down_after_with_1th_sentinel="redis-cli -h sentinel-sts-1.sentinel-svc.default.svc -p 26379 sentinel set mymaster down-after-milliseconds $down"
        add_down_after_with_2th_sentinel="redis-cli -h sentinel-sts-2.sentinel-svc.default.svc -p 26379 sentinel set mymaster down-after-milliseconds $down"
        ADD_DOWN_AFTER_WITH_0TH_SENTINEL=($($add_down_after_with_0th_sentinel))
        ADD_DOWN_AFTER_WITH_1TH_SENTINEL=($($add_down_after_with_1th_sentinel))
        ADD_DOWN_AFTER_WITH_2TH_SENTINEL=($($add_down_after_with_2th_sentinel))

        exec redis-server /data/redis.conf
      else
        echo -e "\nslaveof predis-sts-0.predis-svc.default.svc.cluster.local 6379" >>/data/redis.conf
        exec redis-server /data/redis.conf
      fi
    else
      ping_command="timeout 2 redis-cli -h $REDIS_MASTER_HOST -p 6379 ping"
      PONG=($($ping_command))
      echo "------ pn = $PONG  ------ "
      if [[ $PONG == "PONG" ]]; then
          echo "---- paichi pong   for $HOSTNAME ------- "
          echo -e "\nslaveof $REDIS_MASTER_HOST $REDIS_MASTER_PORT_NUMBER" >> /data/redis.conf
          exec redis-server /data/redis.conf
      else
          echo "Got invalid IP from sentinel, check how many master is right now in peer list"
          echo "again start peer finder -------------------------------"
          my_hostname=$(hostname)
          echo "Bootstrapping RedisDB replica set member: $my_hostname"
          echo  "Reading standard input..."
          while read -ra line; do
              tmp=$(echo -n ${line[0]} | sed -e "s/.svc.cluster.local//g")
              if [[ "$HOST_ADDRESS_TYPE" == "IPv6" ]]; then
                  tmp="[$tmp]"
              fi
              peers=("${peers[@]}" "$tmp")
          done
          echo "Trying to start group with peers'${peers[*]}'"

          for ip in "${peers[@]}"
          do
            echo "ip is ------------ $ip -------- "
          done


          echo "check how many master are in the list"
          flag=0
          cnt_master=0
          for ip in "${peers[@]}"
          do
              ROLE=$(redis-cli -h $ip -p 6379 info replication | grep ^role)
              echo "jhamela hocche --------------- "
              if [[ $ROLE == "role:master" ]]; then
                (( cnt_master++ ))
              fi
          done

          echo "total master ================= $cnt_master ================ "
          if [[ $cnt_master == "0" ]]; then
              sleep 5

              echo "cnt_master=0 ------------------------- peer finder ------------------------ "
              my_hostname=$(hostname)
              echo "Bootstrapping RedisDB replica set member: $my_hostname"
              echo  "Reading standard input..."
              while read -ra line; do
                  tmp=$(echo -n ${line[0]} | sed -e "s/.svc.cluster.local//g")
                  if [[ "$HOST_ADDRESS_TYPE" == "IPv6" ]]; then
                      tmp="[$tmp]"
                  fi
                  peers=("${peers[@]}" "$tmp")
              done
              echo "Trying to start group with peers'${peers[*]}'"
              for ip in "${peers[@]}"
              do
                echo "ip is ------------ $ip -------- "
              done

              echo "again go to sentinel & fetch new master IP & check again if new master IP in peer list or not-----------"

              sentinel_info_command="redis-cli -h sentinel-svc.default.svc -p 26379 SENTINEL get-master-addr-by-name mymaster"
              REDIS_SENTINEL_INFO=($($sentinel_info_command))
              REDIS_MASTER_HOST=${REDIS_SENTINEL_INFO[0]}

              echo "checking  if the REDIS_MASTER_HOST is in peer list or not"
              flag=0
              for ip in "${peers[@]}"
              do
                  if [[ $REDIS_MASTER_HOST == $ip ]]; then
                      flag=1
                      echo "------------------REDIS master host :  $REDIS_MASTER_HOST ------------ ip = $ip "
                  fi
              done

              if [[ $flag == "1" ]]; then
                  echo "flag ========== 1 ========= "
                  echo -e "\nslaveof $REDIS_MASTER_HOST 6379" >> /data/redis.conf
                  exec redis-server /data/redis.conf
              else
                  echo "make 0th pod master & the rest of it as the slave of master 0th"

                  remove_master_from_0th_sentinel="redis-cli -h sentinel-sts-0.sentinel-svc.default.svc -p 26379 SENTINEL REMOVE mymaster"
                  remove_master_from_1th_sentinel="redis-cli -h sentinel-sts-1.sentinel-svc.default.svc -p 26379 SENTINEL REMOVE mymaster"
                  remove_master_from_2th_sentinel="redis-cli -h sentinel-sts-2.sentinel-svc.default.svc -p 26379 SENTINEL REMOVE mymaster"

                  add_master_with_0th_sentinel="redis-cli -h sentinel-sts-0.sentinel-svc.default.svc -p 26379 SENTINEL MONITOR mymaster predis-sts-0.predis-svc.default.svc 6379 2"
                  add_master_with_1th_sentinel="redis-cli -h sentinel-sts-1.sentinel-svc.default.svc -p 26379 SENTINEL MONITOR mymaster predis-sts-0.predis-svc.default.svc 6379 2"
                  add_master_with_2th_sentinel="redis-cli -h sentinel-sts-2.sentinel-svc.default.svc -p 26379 SENTINEL MONITOR mymaster predis-sts-0.predis-svc.default.svc 6379 2"

                  REMOVE_MASTER_FROM_0TH_SENTINEL=($($remove_master_from_0th_sentinel))
                  REMOVE_MASTER_FROM_1TH_SENTINEL=($($remove_master_from_1th_sentinel))
                  REMOVE_MASTER_FROM_2TH_SENTINEL=($($remove_master_from_2th_sentinel))

                  ADD_MASTER_WITH_OTH_SENTINEL=($($add_master_with_0th_sentinel))
                  ADD_MASTER_WITH_1TH_SENTINEL=($($add_master_with_1th_sentinel))
                  ADD_MASTER_WITH_2TH_SENTINEL=($($add_master_with_2th_sentinel))

                  add_failover_with_0th_sentinel="redis-cli -h sentinel-sts-0.sentinel-svc.default.svc -p 26379 sentinel set mymaster failover-timeout $timeout"
                  add_failover_with_1th_sentinel="redis-cli -h sentinel-sts-1.sentinel-svc.default.svc -p 26379 sentinel set mymaster failover-timeout $timeout"
                  add_failover_with_2th_sentinel="redis-cli -h sentinel-sts-2.sentinel-svc.default.svc -p 26379 sentinel set mymaster failover-timeout $timeout"
                  ADD_FAILOVER_WITH_0TH_SENTINEL=($($add_failover_with_0th_sentinel))
                  ADD_FAILOVER_WITH_1TH_SENTINEL=($($add_failover_with_1th_sentinel))
                  ADD_FAILOVER_WITH_2TH_SENTINEL=($($add_failover_with_2th_sentinel))

                  add_down_after_with_0th_sentinel="redis-cli -h sentinel-sts-0.sentinel-svc.default.svc -p 26379 sentinel set mymaster down-after-milliseconds $down"
                  add_down_after_with_1th_sentinel="redis-cli -h sentinel-sts-1.sentinel-svc.default.svc -p 26379 sentinel set mymaster down-after-milliseconds $down"
                  add_down_after_with_2th_sentinel="redis-cli -h sentinel-sts-2.sentinel-svc.default.svc -p 26379 sentinel set mymaster down-after-milliseconds $down"
                  ADD_DOWN_AFTER_WITH_0TH_SENTINEL=($($add_down_after_with_0th_sentinel))
                  ADD_DOWN_AFTER_WITH_1TH_SENTINEL=($($add_down_after_with_1th_sentinel))
                  ADD_DOWN_AFTER_WITH_2TH_SENTINEL=($($add_down_after_with_2th_sentinel))

                  # add replicaof predis-sts-0 with previous pod , (not restarted new pod, cz it'll not add with restarted pod as the server isn't running)
                  for ip in "${peers[@]}"
                  do
                      echo "atkay ache ================ "
                      # zodi master pod na hoy & 0th pod ar replica na hoy

                      ROLE=$(redis-cli -h $ip -p 6379 info replication | grep ^role)
                      MASTER_HOST=$(redis-cli -h $ip -p 6379 info replication | grep ^master_host)
                      EXPECTED_MASTER_HOST="predis-sts-0.predis-svc.default.svc"

                      if [[ $ROLE == "role:slave" && $MASTER_HOST -ne $EXPECTED_MASTER_HOST ]]; then
                        replicaof=$(redis-cli -h $ip -p 6379 replicaof predis-sts-0.predis-svc.default.svc 6379)
                      fi

                  done
                  if [[ $(hostname) == "predis-sts-0" ]]; then
                      echo "having problem-----"
                      exec redis-server /data/redis.conf
                  else
                      echo "connected as slave------------------------- "
                      echo -e "\nreplicaof predis-sts-0.predis-svc.default.svc 6379" >> /data/redis.conf
                      exec redis-server /data/redis.conf
                  fi
                  echo "atkay achi , ki korbo??  ================ "
              fi
          else
              echo "asche akhane --------------------- "
              echo -e "\nslaveof $REDIS_MASTER_HOST 6379" >> /data/redis.conf
              exec redis-server /data/redis.conf
          fi
      fi
    fi


#  prestop.sh: |-
#    #!/bin/bash
#
#    sentinel_info_command="redis-cli -h sentinel-svc.default.svc -p 26379 SENTINEL get-master-addr-by-name mymaster"
#    REDIS_SENTINEL_INFO=($($sentinel_info_command))
#    REDIS_MASTER_HOST=${REDIS_SENTINEL_INFO[0]}
#    REDIS_MASTER_PORT_NUMBER=${REDIS_SENTINEL_INFO[1]}
#
#    myip=$(hostname -i)
#    echo "entered prestoop--------------------------" >/proc/1/fd/1
#
#
#    if [[ $REDIS_MASTER_HOST==$myip ]]; then
#      force_failover="redis-cli -h sentinel-svc.default.svc -p 26379 SENTINEL failover mymaster"
#      FORCE_FAILOVER=($($force_failover))
#      sleep 1
#    fi
#
#    #current master
#    com="redis-cli -h sentinel-svc.default.svc -p 26379 SENTINEL get-master-addr-by-name mymaster"
#    COM=($($com))
#    masterhost=${COM[0]}
#    echo "current master host --------------------------$masterhost" >/proc/1/fd/1


